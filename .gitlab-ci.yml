image: docker:stable

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  CONTAINER_SHA_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_BRANCH_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  COMPOSE_URL: https://github.com/docker/compose/releases/download/1.23.1/docker-compose-$(uname -s)-$(uname -m)

services:
  - docker:dind

stages:
  - build
  - test
  - release
  - deploy

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

build:
  stage: build
  script:
    - docker pull $CONTAINER_SHA_IMAGE
      || docker pull $CONTAINER_BRANCH_IMAGE
      || docker pull $CONTAINER_RELEASE_IMAGE
      || echo "No cache found building from scratch"
    - docker build --pull
      --cache-from $CONTAINER_SHA_IMAGE
      --cache-from $CONTAINER_BRANCH_IMAGE
      --cache-from $CONTAINER_RELEASE_IMAGE
      -t $CONTAINER_BRANCH_IMAGE
      -t $CONTAINER_SHA_IMAGE .
    - docker push $CONTAINER_SHA_IMAGE
  only:
    - tags
    - develop
    - staging
    - merge_requests

test:
  image:
    name: docker/compose:1.23.2
    entrypoint: [""]
  script:
  - env > .env
  - docker-compose -f external_services.yml up -d
  - ln -s docker-compose.prod.yml docker-compose.yml
  - docker pull $CONTAINER_SHA_IMAGE
  - docker tag $CONTAINER_SHA_IMAGE $CONTAINER_RELEASE_IMAGE
  - docker-compose up -d
  - docker-compose exec -T server pip install coverage
  - docker-compose exec -T server coverage run --source=. manage.py test -v 2
  - docker-compose exec -T server sh -c "coverage html && coverage report"
  - mkdir -p coverage && docker cp "$(docker-compose ps -q server)":/code/htmlcov/. coverage/. 
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    paths:
      - coverage
  only:
    - tags
    - develop
    - staging
    - merge_requests

release-image:
  stage: release
  script:
    - docker pull $CONTAINER_SHA_IMAGE
    - docker tag $CONTAINER_SHA_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - tags
    - develop
    - staging

pages:
  stage: deploy
  dependencies:
    - test
  script:
    - mv coverage/ public/
  artifacts:
    paths:
      - public
  only:
    - develop

deploy:
  stage: deploy
  script:
    - ./docker/deploy.sh
  only:
    - staging
